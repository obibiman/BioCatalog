@model Biodiversity.DataAccess.SqlDataTier.Entity.Literature

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/CSS/jquery-ui-1.9.0.custom.css" rel="stylesheet"/>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jQueryUI/UI/jquery-ui-1.11.4/jquery-ui.min.js"></script>
<h2>Create</h2>

<script type="text/javascript">
    $(document).ready(function () {
        var dataStore;
        $('#txtName').autocomplete({
            source: function(request, response) {
                var searchText = request.term;
                var autocompleteUrl = 'http://localhost:61330/api/Literatures/RetrieveAuthors/' + searchText;
                $.ajax({
                    url: autocompleteUrl,
                    type: 'GET',
                    cache: false,
                    dataType: 'json',
                    success: function(json) {
                        response($.map(json, function (data, id) {
                            dataStore = data;
                            var dataItem = new Object();
                            return {
                                label: data.AuthorId + ': ' + data.FirstName + ' ' + data.SurName + ' ' + data.LastName,
                                value: data.AuthorId + ': ' + data.FirstName + ' ' + data.SurName + ' ' + data.LastName
                            };
                            //return {
                            //    label: data.LastName,
                            //    value: data.LastName
                            //};
                        }));
                    },
                    error: function(xmlHttpRequest, textStatus, errorThrown) {
                        console.log('some error occured', textStatus, errorThrown);
                    }
                });
            },
        
            //minLength: 1,
            select: function(event, ui) {
                lblMessage.innerText = "You Selected Author :";
                lblSelectedVal.innerText = ui.item.label;
                $('#txtName').val(ui.item.label);
                //$('#txtAuthorId').val(ui.item.dataItem[0]);
                //$('#txtAuthorFirstName').val(ui.item.dataItem[1]);
                //$('#txtAuthorSurName').val(ui.item.dataItem[2]);
                //$('#txtAuthorLastName').val(ui.item.dataItem[3]);
                return false;
            }
        });
    });
</script>
<form id="authorSearch" class="form-horizontal">
    <div class="form-group">
        <label for="txtName" class="col-sm-3 control-label">Author Last Name</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="txtName"
                   placeholder="Enter author last name in whole or in part">
        </div>
        <div></div>
    </div>
    @*<div class="form-group">
        <label for="txtAuthorId" class="col-sm-3 control-label">Author Id</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="txtAuthorId">
        </div>
        <div></div>
    </div>
    <div class="form-group">
        <label for="txtAuthorFirstName" class="col-sm-3 control-label">Author First Name</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="txtAuthorFirstName">
        </div>
        <div></div>
    </div>
    <div class="form-group">
        <label for="txtAuthorSurName" class="col-sm-3 control-label">Author Surname</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="txtAuthorSurName">
        </div>
        <div></div>
    </div>
    <div class="form-group">
        <label for="txtAuthorLastName" class="col-sm-3 control-label">Author Last Name</label>
        <div class="col-sm-9">
            <input type="text" class="form-control" id="txtAuthorLastName">
        </div>
        <div></div>
    </div>*@
    <div class="form-group">
        <label id="lblMessage" class="col-sm-3 control-label">
        </label>
    </div>
    <div class="form-group">
        <label id="lblSelectedVal" class="col-sm-3 control-label"></label>
    </div>
    <div class="clearfix">&nbsp;</div>
    <div class="col-sm-12 text-center">
        <button type="submit" class="btn btn-primary">Submit</button>
    </div>
</form>
@*<div id="body">
    <table style="background-color: skyblue; border: solid 4px green; text-align: center; width: 50%;">
        <tr>
            <td>
                <label for="autocomplete-textbox">Enter User Name : </label>
            </td>
            <td style="text-align: left">
                <input type="text" id="txtName" size="50"/>
            </td>
        </tr>
        <tr>
            <td></td>
        </tr>
        <tr>
            <td>
                <label id="lblMessage" style="color: red;" ></label>
            </td>
            <td style="text-align: left">
                <label id="lblSelectedVal" style="color: magenta;" ></label>
            </td>
        </tr>
    </table>
</div>*@

@*@using (Html.BeginForm())
{
    <p>
        Find Author by Last Name: @Html.TextBox("SearchString") <input type="submit" value="Search"/>
    </p>
}*@


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-vertical">
        <h4>Literature</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @*<div class="form-group">
            @Html.LabelFor(model => model.LiteratureId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LiteratureId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LiteratureId, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.ReferenceYear, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReferenceYear, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ReferenceYear, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReferenceYearSub, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReferenceYearSub, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ReferenceYearSub, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ReferenceDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReferenceDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ReferenceDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TitleofArticleBooktitle, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.TitleofArticleBooktitle, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.TitleofArticleBooktitle, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.InReferenceNumber, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.InReferenceNumber, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.InReferenceNumber, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Journal, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Journal, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Journal, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Volume, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Volume, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Volume, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Page, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Page, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Page, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Plate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Plate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Plate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Publisher, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Publisher, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Publisher, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.City, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.City, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.City, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Comment, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Comment, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Comment, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PdfId, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.PdfId, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.PdfId, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedBy, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedBy, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ModifiedBy, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ModifiedDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.ModifiedDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.ModifiedDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedBy, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedBy, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CreatedBy, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CreatedDate, new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.CreatedDate, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.CreatedDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </div>
    </div>
}

<div>
    @*@Html.Partial("GetAuthorForGivenLiterature")*@
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}