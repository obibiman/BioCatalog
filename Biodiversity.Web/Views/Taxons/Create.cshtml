@model Biodiversity.DataAccess.SqlDataTier.Entity.Taxon

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
    <h4>Taxon</h4>
    <hr/>
    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
    @*<div class="form-group">
            @Html.LabelFor(model => model.TaxonId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TaxonId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TaxonId, "", new { @class = "text-danger" })
            </div>
        </div>*@

    <div class="form-group">
        @Html.LabelFor(model => model.TaxonName, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxonName, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TaxonName, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaxonType, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxonType, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TaxonType, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Sex, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Sex, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Sex, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Level, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Level, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Level, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Parent, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Parent, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Parent, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LevelUp, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.LevelUp, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.LevelUp, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TypeSpecies, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TypeSpecies, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TypeSpecies, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrigGenus, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrigGenus, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.OrigGenus, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OrigSpelling, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.OrigSpelling, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.OrigSpelling, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.StartAge, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.StartAge, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.StartAge, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.EndAge, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.EndAge, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.EndAge, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.GeologicAge, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.GeologicAge, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.GeologicAge, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RecentGenera, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecentGenera, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.RecentGenera, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FossilGenera, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.FossilGenera, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.FossilGenera, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.RecentSpecies, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.RecentSpecies, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.RecentSpecies, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.FossilSpecies, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.FossilSpecies, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.FossilSpecies, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Page, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Page, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Page, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Illustration, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Illustration, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Illustration, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaxonComment, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxonComment, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TaxonComment, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Commonname, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.Commonname, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.Commonname, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TypeForGroup, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TypeForGroup, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TypeForGroup, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.TaxonKey, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.TaxonKey, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.TaxonKey, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PhylumKey, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.PhylumKey, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.PhylumKey, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OldKey, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.OldKey, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.OldKey, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.OldId, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.OldId, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.OldId, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LevelUpOld, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.LevelUpOld, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.LevelUpOld, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModifiedBy, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.ModifiedBy, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.ModifiedBy, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ModifiedDate, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.ModifiedDate, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.ModifiedDate, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedBy, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedBy, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CreatedBy, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.CreatedDate, new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            @Html.EditorFor(model => model.CreatedDate, new {htmlAttributes = new {@class = "form-control"}})
            @Html.ValidationMessageFor(model => model.CreatedDate, "", new {@class = "text-danger"})
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-primary"/>
        </div>
    </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}